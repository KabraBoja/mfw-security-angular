!function(){"use strict";function a(a){}function b(a){a.decorator("$mfwSecurity",["$delegate","$mfwSessionAction","$timeout",function(a,b,c){var d=a.activate;a.activate=function(){d.apply(a,arguments),c(function(){var a=arguments.length?arguments[0]:void 0;b.broadcastLogin(a)})};var e=a.logout;a.logout=function(){e.apply(a,arguments),c(function(){b.broadcastLogout()})};var f=a.refreshAccessToken;return a.refreshAccessToken=function(){f.apply(a,arguments),c(function(){b.broadcastUpdateCredentials()})},a}])}function c(a){var b={exports:{dummy:function(){}},handlers:[]};return b.handlers[a.LOGIN]=function(b){this.emit(a.LOGIN,b)},b.handlers[a.LOGOUT]=function(){this.emit(a.LOGOUT)},b.handlers[a.UPDATE_CREDENTIALS]=function(){this.emit(a.UPDATE_CREDENTIALS)},b}function d(a,b){return{broadcastLogin:function(c){a.dispatch(b.LOGIN,c)},broadcastLogout:function(){a.dispatch(b.LOGOUT)},broadcastUpdateCredentials:function(){a.dispatch(b.UPDATE_CREDENTIALS)}}}var e=angular.module("mfw.security.session-store",["mfw.security","flux"]);e.run(a),a.$inject=["$mfwSessionStore"],e.config(b),b.$inject=["$provide"],e.constant("$mfwSessionEventConstant",{SESSION_ALL:"mfw:Session.*",LOGIN:"mfw:Session.login",LOGOUT:"mfw:Session.logout",UPDATE_CREDENTIALS:"mfw:Session.credentials-update"}),e.store("$mfwSessionStore",c),c.$inject=["$mfwSessionEventConstant"],e.factory("$mfwSessionAction",d),d.$inject=["flux","$mfwSessionEventConstant"]}();
//# sourceMappingURL=mfw-security-session.store.min.js.map